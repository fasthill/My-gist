Starting from Tensorflow 1.9, one can pass tf.data.Dataset object directly into keras.Model.fit() 
and it would act similar to fit_generator.

I found that tf.keras and tf.nn could do the same thing, so why keep both tf.keras and tf.nn existed in the new version of tf2.0?
As tf.keras api could provide more flexibility in contrast to tf.nn api, so I think there is no need to keep tf.nn api in the new version of tf2.0 any more. 
If both are kept, it could cause more confusion to tensorflow users.

There are many changes in TensorFlow 2.0 to make users more productive, including removing redundant APIs.
(https://blog.tensorflow.org/2019/02/effective-tensorflow-20-best-practices.html)
https://github.com/tensorflow/community/blob/master/rfcs/20180827-api-names.md
